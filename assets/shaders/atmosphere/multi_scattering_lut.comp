#version 450

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

#include "functions.glsl"

layout (set = 0, binding = 0) uniform sampler2D transmittance_lut;
layout (set = 0, binding = 1) uniform sampler3D scattering_density_texture;
layout (set = 0, binding = 2, rgba32f) uniform writeonly image3D delta_multiple_scattering;
layout (set = 0, binding = 3, rgba32f) uniform image3D scattering;

void main() {

    AtmosphereParameters atmosphere = GetAtmosphereParameters();

    vec3 frag_coord = gl_GlobalInvocationID + vec3(0.5);

    float nu;
    ivec3 coords = ivec3(gl_GlobalInvocationID);
    vec3 ms = ComputeMultipleScatteringTexture(
        atmosphere, transmittance_lut, scattering_density_texture,
        frag_coord, nu);
    imageStore(delta_multiple_scattering, coords, vec4(ms, 0));
    imageStore(scattering, coords, vec4(ms / RayleighPhaseFunction(nu), 0) + imageLoad(scattering, coords));
}