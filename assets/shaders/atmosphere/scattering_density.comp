#version 450

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

#include "functions.glsl"

layout(set = 0, binding = 0) uniform sampler2D transmittance_texture;
layout(set = 0, binding = 1) uniform sampler3D single_rayleigh_scattering_texture;
layout(set = 0, binding = 2) uniform sampler3D single_mie_scattering_texture;
layout(set = 0, binding = 3) uniform sampler3D multiple_scattering_texture;
layout(set = 0, binding = 4) uniform sampler2D irradiance_texture;
layout(set = 0, binding = 5, rgba32f) uniform writeonly image3D scattering_density;

layout(push_constant) uniform PerOrder {
    int scattering_order;
};

void main() {

    AtmosphereParameters atmosphere = GetAtmosphereParameters();

    vec3 frag_coord = gl_GlobalInvocationID + vec3(0.5);

    vec3 density = ComputeScatteringDensityTexture(atmosphere, transmittance_texture, single_rayleigh_scattering_texture, single_mie_scattering_texture, multiple_scattering_texture, irradiance_texture, frag_coord, scattering_order);
    imageStore(scattering_density, ivec3(gl_GlobalInvocationID), vec4(density, 0.0));
}