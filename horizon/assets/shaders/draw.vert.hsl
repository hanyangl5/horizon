
CBUFFER(uniformBlock, UPDATE_FREQ_PER_FRAME, b0, binding = 0)
{
    DATA(float4x4, vp, None);
};

PUSH_CONSTANT(model_matrix, b1){
    DATA(float4x4, model_matrix, None);
};


STRUCT(VSInput)
{
	DATA(float3, position, POSITION);
	DATA(float3, normal,   NORMAL);
	DATA(float2, uv0,   UV0);
};

STRUCT(VSOutput)
{
	DATA(float4, position, SV_Position);
	DATA(float4, normal,    NORMAL);
};

VSOutput VS_MAIN( VSInput vsin, SV_InstanceID(uint) InstanceID )
{
    INIT_MAIN;
    VSOutput vsout;

    //vsout.position = mul(mul(Get(vp), Get(model_matrix)), float4(vsin.position, 1.0)); // row major
    vsout.position = mul(float4(vsin.position, 1.0), mul(Get(model_matrix), Get(vp))); // column major
    vsout.normal = float4(vsin.normal, 1.0);
    RETURN(vsout);
}
