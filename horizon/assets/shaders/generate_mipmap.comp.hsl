// TODO : https://github.com/nvpro-samples/vk_compute_mipmaps provides a better solution


RES(RWTex2D(float), Source, UPDATE_FREQ_PER_DRAW, u0, binding = 1);
RES(RWTex2D(float), Destination, UPDATE_FREQ_PER_DRAW, u1, binding = 2);

PUSH_CONSTANT(RootConstant, b0)
{
	DATA(uint2, MipSize, None);
};

NUM_THREADS(16,  16,  1)
void CS_MAIN( SV_DispatchThreadID(uint3) id) 
{    
	INIT_MAIN;
	if (id.x < Get(MipSize).x && id.y < Get(MipSize).y)
	{
		float color = 1.0f;
		UNROLL for (int x = 0; x < 2; ++x)
		{
			UNROLL for (int y = 0; y < 2; ++y)
				color = min(color, LoadRWTex2D(Get(Source), id.xy * 2 + uint2(x, y)).x);
		}
		Write2D(Get(Destination), id.xy, color);
	}
	RETURN();
}